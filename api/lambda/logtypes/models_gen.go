// Code generated by apigen; DO NOT EDIT.
// package logtypesapi documents github.com/panther-labs/panther/internal/core/logtypesapi.LogTypesAPI
package logtypesapi

// LogTypesAPI available endpoints
type LogTypesAPI interface {
	ListAvailableLogTypes() (ListAvailableLogTypesResponse, error)

	GetCustomLog(input GetCustomLogInput) (GetCustomLogResponse, error)

	PutCustomLog(input PutCustomLogInput) (PutCustomLogResponse, error)

	DelCustomLog(input DelCustomLogInput) (DelCustomLogResponse, error)

	ListCustomLogs() (ListCustomLogsResponse, error)
}

// Models for LogTypesAPI

// LogTypesAPIPayload is the payload for calls to LogTypesAPI endpoints.
type LogTypesAPIPayload struct {
	ListAvailableLogTypes *struct{}
	GetCustomLog          *GetCustomLogInput
	PutCustomLog          *PutCustomLogInput
	DelCustomLog          *DelCustomLogInput
	ListCustomLogs        *struct{}
}

type DelCustomLogInput struct {
	LogType  string `json:"logType" validate:"required,startswith=Custom." description:"The log type id"`
	Revision int64  `json:"revision" validate:"min=1" description:"Log record revision"`
}

type DelCustomLogResponse struct {
	Error struct {
		Code    string `json:"code" validate:"required"`
		Message string `json:"message" validate:"required"`
	} `json:"error,omitempty" validate:"required_without=Result" description:"The delete record"`
}

type GetCustomLogInput struct {
	LogType  string `json:"logType" validate:"required,startswith=Custom." description:"The log type id"`
	Revision int64  `json:"revision,omitempty" validate:"omitempty,min=1" description:"Log record revision (0 means latest)"`
}

type GetCustomLogResponse struct {
	Result struct {
		LogType      string    `json:"logType" validate:"required,startswith=Custom." description:"The log type id"`
		Revision     int64     `json:"revision" validate:"required,min=1" description:"Log record revision"`
		UpdatedAt    time.Time `json:"updatedAt" description:"Last update timestamp of the record"`
		Description  string    `json:"description" description:"Log type description"`
		ReferenceURL string    `json:"referenceURL" description:"A URL with reference docs for the logtype"`
		LogSpec      string    `json:"logSpec" validate:"required" description:"The log spec in YAML or JSON format"`
	} `json:"record,omitempty" validate:"required_without=Error" description:"The custom log record"`
	Error struct {
		Code    string `json:"code" validate:"required"`
		Message string `json:"message" validate:"required"`
	} `json:"error,omitempty" validate:"required_without=Result" description:"An error that occurred"`
}

type ListAvailableLogTypesResponse struct {
	LogTypes []string `json:"logTypes"`
}

type ListCustomLogsResponse struct {
	CustomLogs []struct {
		LogType      string    `json:"logType" validate:"required,startswith=Custom." description:"The log type id"`
		Revision     int64     `json:"revision" validate:"required,min=1" description:"Log record revision"`
		UpdatedAt    time.Time `json:"updatedAt" description:"Last update timestamp of the record"`
		Description  string    `json:"description" description:"Log type description"`
		ReferenceURL string    `json:"referenceURL" description:"A URL with reference docs for the logtype"`
		LogSpec      string    `json:"logSpec" validate:"required" description:"The log spec in YAML or JSON format"`
	} `json:"customLogs" validate:"required,min=0" description:"Custom log records stored"`
	Error struct {
		Code    string `json:"code" validate:"required"`
		Message string `json:"message" validate:"required"`
	} `json:"error,omitempty" validate:"required_without=Result" description:"An error that occurred during the operation"`
}

type PutCustomLogInput struct {
	LogType      string `json:"logType" validate:"required,startswith=Custom." description:"The log type id"`
	Revision     int64  `json:"revision,omitempty" validate:"omitempty,min=1" description:"Custom log record revision to update (if omitted a new record will be created)"`
	Description  string `json:"description" description:"Log type description"`
	ReferenceURL string `json:"referenceURL" description:"A URL with reference docs for the logtype"`
	LogSpec      string `json:"logSpec" validate:"required" description:"The log spec in YAML or JSON format"`
}

type PutCustomLogResponse struct {
	Result struct {
		LogType      string    `json:"logType" validate:"required,startswith=Custom." description:"The log type id"`
		Revision     int64     `json:"revision" validate:"required,min=1" description:"Log record revision"`
		UpdatedAt    time.Time `json:"updatedAt" description:"Last update timestamp of the record"`
		Description  string    `json:"description" description:"Log type description"`
		ReferenceURL string    `json:"referenceURL" description:"A URL with reference docs for the logtype"`
		LogSpec      string    `json:"logSpec" validate:"required" description:"The log spec in YAML or JSON format"`
	} `json:"record,omitempty" validate:"required_without=Error" description:"The modified record"`
	Error struct {
		Code    string `json:"code" validate:"required"`
		Message string `json:"message" validate:"required"`
	} `json:"error,omitempty" validate:"required_without=Result" description:"An error that occurred during the operation"`
}
